{"version":3,"sources":["components/Header.js","components/Hero.js","components/Movies.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","div","props","dark","Header","useState","isDark","setIsDark","useEffect","window","addEventListener","scrollY","removeEventListener","src","alt","HeroContainer","background","HeroTitle","h1","HeroDescription","p","HeroButton","button","Hero","movie","console","log","backdrop_path","name","overview","MoviesContainer","MoviesTitle","h2","MoviesRow","MoviesPoster","img","Movies","title","movies","map","poster_path","id","URL","API_KEY","endpoints","App","originals","setOriginals","trending","setTrending","nowPlaying","setNowPlaying","popular","setPopular","topRated","setTopRated","upcoming","setUpcoming","axios","get","params","api_key","then","res","data","results","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93661af7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  ${tw`\r\n    flex\r\n    justify-between\r\n    fixed\r\n    top-0\r\n    w-full\r\n    transition-all\r\n    z-10\r\n  `}\r\n  ${(props) => (props.dark ? tw`bg-black` : tw`bg-transparent`)}\r\n  img {\r\n    ${tw`\r\n      h-8\r\n      p-4\r\n    `}\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        setIsDark(true);\r\n      } else setIsDark(false);\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <HeaderContainer dark={isDark}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/6/67/NewNetflixLogo.png\"\r\n        alt=\"\"\r\n      />\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"\"\r\n      />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst HeroContainer = styled.div`\r\n  ${tw`\r\n    p-8\r\n  `}\r\n  height: 80vh;\r\n  background-size: cover !important;\r\n  ${(props) =>\r\n    `background: url('https://image.tmdb.org/t/p/original${props.background}');`}\r\n`;\r\n\r\nconst HeroTitle = styled.h1`\r\n  ${tw`\r\n    text-5xl\r\n    font-bold\r\n    mb-4\r\n  `}\r\n  margin-top: 40vh;\r\n`;\r\n\r\nconst HeroDescription = styled.p`\r\n  ${tw`\r\n    font-medium\r\n    text-lg\r\n    mb-4\r\n  `}\r\n  width: 45rem;\r\n  max-width: 80vw;\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst HeroButton = styled.button`\r\n  ${tw`\r\n    cursor-pointer\r\n    font-bold\r\n    rounded\r\n    px-8\r\n    py-2\r\n    mr-2\r\n  `}\r\n  background-color: rgba(51, 51, 51, 0.5);\r\n  &:hover {\r\n    background-color: #e6e6e6;\r\n    color: black;\r\n    transition: all 0.2s;\r\n  }\r\n`;\r\n\r\nfunction Hero({ movie }) {\r\n  console.log(movie);\r\n  return (\r\n    <HeroContainer background={movie?.backdrop_path}>\r\n      <HeroTitle>{movie?.name}</HeroTitle>\r\n      <HeroDescription>{movie?.overview}</HeroDescription>\r\n      <HeroButton>Play</HeroButton>\r\n      <HeroButton>My List</HeroButton>\r\n    </HeroContainer>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport tw, { styled } from \"twin.macro\";\r\n\r\nconst MoviesContainer = styled.div`\r\n  ${tw`\r\n    my-8\r\n  `}\r\n`;\r\n\r\nconst MoviesTitle = styled.h2`\r\n  ${tw`\r\n      text-2xl\r\n      font-bold\r\n      uppercase\r\n      mx-8\r\n    `}\r\n`;\r\n\r\nconst MoviesRow = styled.div`\r\n  ${tw`\r\n      flex\r\n      overflow-x-auto\r\n      mt-4\r\n      p-4\r\n    `}\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MoviesPoster = styled.img`\r\n  ${tw`\r\n    m-2\r\n    w-40\r\n  `}\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    transform: scale(1.09);\r\n  }\r\n`;\r\n\r\nfunction Movies({ title, movies }) {\r\n  return (\r\n    <MoviesContainer>\r\n      <MoviesTitle>{title}</MoviesTitle>\r\n      <MoviesRow>\r\n        {movies.map((movie) => (\r\n          <MoviesPoster\r\n            key={movie.id}\r\n            src={\"https://image.tmdb.org/t/p/w300\" + movie.poster_path}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </MoviesRow>\r\n    </MoviesContainer>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport Hero from \"./components/Hero\";\nimport Movies from \"./components/Movies\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"ab41e7f333af107db807cd42035925a9\";\n\nconst endpoints = {\n  originals: \"/discover/tv\",\n  trending: \"/trending/all/week\",\n  now_playing: \"/movie/now_playing\",\n  popular: \"/movie/popular\",\n  top_rated: \"/movie/top_rated\",\n  upcoming: \"/movie/upcoming\",\n};\n\nfunction App() {\n  const [originals, setOriginals] = useState([]);\n  const [trending, setTrending] = useState([]);\n  const [nowPlaying, setNowPlaying] = useState([]);\n  const [popular, setPopular] = useState([]);\n  const [topRated, setTopRated] = useState([]);\n  const [upcoming, setUpcoming] = useState([]);\n\n  useEffect(() => {\n    // Load Originals\n    axios\n      .get(`${URL}${endpoints.originals}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      })\n      .then((res) => setOriginals(res.data.results));\n\n    // Load Trending\n    axios\n      .get(`${URL}${endpoints.trending}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      })\n      .then((res) => setTrending(res.data.results));\n\n    // Load Now Playing\n    axios\n      .get(`${URL}${endpoints.now_playing}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      })\n      .then((res) => setNowPlaying(res.data.results));\n\n    // Load Popular\n    axios\n      .get(`${URL}${endpoints.popular}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      })\n      .then((res) => setPopular(res.data.results));\n\n    // Load Top Rated\n    axios\n      .get(`${URL}${endpoints.top_rated}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      })\n      .then((res) => setTopRated(res.data.results));\n\n    // Load Upcoming\n    axios\n      .get(`${URL}${endpoints.upcoming}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      })\n      .then((res) => setUpcoming(res.data.results));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Hero movie={originals[Math.floor(Math.random() * originals.length)]} />\n      <Movies title=\"Netflix originals\" movies={originals} />\n      <Movies title=\"Trending\" movies={trending} />\n      <Movies title=\"Now Playing\" movies={nowPlaying} />\n      <Movies title=\"Popular\" movies={popular} />\n      <Movies title=\"Top Rated\" movies={topRated} />\n      <Movies title=\"Upcoming\" movies={upcoming} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}